# Generated by Django 3.1.12 on 2021-07-01 10:01

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name of champion')),
                ('dps', models.IntegerField(verbose_name='Damage per second(dmg*attackspeed) of champion')),
                ('attackspeed', models.FloatField(verbose_name='Attack speed of champion')),
                ('dmg', models.IntegerField(verbose_name='Damage of champion')),
                ('range', models.IntegerField(choices=[(1, 'One'), (2, 'Two'), (3, 'Three'), (4, 'Four'), (5, 'Five'), (6, 'Six'), (7, 'Seven')], verbose_name='Range of champion in hexes')),
                ('hp', models.IntegerField(verbose_name='Health points of champion')),
                ('mana', models.IntegerField(verbose_name='Mana points of champion')),
                ('armor', models.IntegerField(verbose_name='Armor of champion')),
                ('mr', models.IntegerField(verbose_name='Magic resistance of champion')),
                ('origin_prim', models.CharField(max_length=30, verbose_name='Origin primary of champion')),
                ('origin_sec', models.CharField(blank=True, max_length=30, verbose_name='Origin secondary of champion')),
                ('class_prim', models.CharField(max_length=30, verbose_name='Class primary of champion')),
                ('class_sec', models.CharField(blank=True, max_length=30, verbose_name='Class secondary of champion')),
                ('cost', models.IntegerField(choices=[(1, 'One'), (2, 'Two'), (3, 'Three'), (4, 'Four'), (5, 'Five'), (6, 'Six'), (7, 'Seven')], verbose_name='Cost of champion')),
                ('tier', models.IntegerField(choices=[(1, 'D'), (2, 'C'), (3, 'B'), (4, 'A'), (5, 'S')], verbose_name='Tier of champion')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True, verbose_name='Champion name')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='champion',
            constraint=models.CheckConstraint(check=models.Q(('dps__gte', 0), ('dps__lte', 800)), name='A dps value is valid between 0 and 800'),
        ),
        migrations.AddConstraint(
            model_name='champion',
            constraint=models.CheckConstraint(check=models.Q(('attackspeed__gte', 0.0), ('attackspeed__lte', 8.0)), name='An attackspeed value is valid between 0.0 and 8.0'),
        ),
        migrations.AddConstraint(
            model_name='champion',
            constraint=models.CheckConstraint(check=models.Q(('dmg__gte', 0), ('dmg__lte', 500)), name='A dmg value is valid between 0 and 500'),
        ),
        migrations.AddConstraint(
            model_name='champion',
            constraint=models.CheckConstraint(check=models.Q(('hp__gte', 0), ('hp__lte', 5000)), name='A hp value is valid between 0 and 5000'),
        ),
        migrations.AddConstraint(
            model_name='champion',
            constraint=models.CheckConstraint(check=models.Q(('mana__gte', 0), ('mana__lte', 300)), name='A mana value is valid between 0 and 300'),
        ),
        migrations.AddConstraint(
            model_name='champion',
            constraint=models.CheckConstraint(check=models.Q(('armor__gte', 0), ('armor__lte', 300)), name='AN armor value is valid between 0 and 300'),
        ),
        migrations.AddConstraint(
            model_name='champion',
            constraint=models.CheckConstraint(check=models.Q(('mr__gte', 0), ('mr__lte', 300)), name='A mr value is valid between 0 and 300'),
        ),
    ]
